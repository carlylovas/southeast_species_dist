---
title: "Southeast US Species Summaries"
author: "cslovas"
format: 
  html:
    toc: true
    toc_float: 
      collapsed: false
    self-contained: true
editor: visual
---

Below are species distributions based on the SEAMAP South Atlantic In-shore Trawl Survey conducted by the South Carolina Department of Natural Resources. More information regarding how the trawl is conducted can be found [here](https://www.dnr.sc.gov/marine/mrri/CoastalResearch/SEAMAP/pdf/SEAMAPtrawlmethods.pdf).

#### Survey Area

![](images/strata_map-01.webp){fig-align="center" width="377"}

```{r}
#| label: load libraries and data
#| echo: false
#| warning: false
#| message: false

library(here)
library(tidyverse)
library(gmRi)
library(matrixStats)
library(patchwork)
library(broom)
library(rmarkdown)
library(shiny)

se_survey <- read.csv(here("data", "Coastal Survey.ABUNDANCEBIOMASS.2025.csv")) |> 
  summarise(across(1:44, ~ str_remove(.x, "="))) |> 
  slice(1:431313) # drops variable descriptions at the bottom of the spreadsheet

```

```{r}
#| label: clean survey data
#| echo: false
#| message: false
#| warning: false

clean_survey <- se_survey |>
  rename("comname" = "SPECIESCOMMONNAME",
         "scientific_name" = "SPECIESSCIENTIFICNAME") |>
  mutate(comname = str_to_lower(comname),
         scientific_name = str_to_sentence(scientific_name),
         est_year = lubridate::year(mdy(DATE)),
         month = lubridate::month(mdy(DATE)),
         yearday = lubridate::yday(mdy(DATE))) |> 
  relocate(est_year, .after = "DATE") |>
  relocate(month, .before = "est_year") |>
  select(PROJECTNAME, PROJECTAGENCY, EVENTNAME, month, est_year, yearday, scientific_name, comname, NUMBERTOTAL, SPECIESTOTALWEIGHT, DEPTHZONE, TEMPSURFACE, TEMPBOTTOM, LATITUDESTART, LONGITUDESTART) |>
  mutate(season = case_when(
    month %in% c(4:6) ~ "spring",
    month %in% c(7:9) ~ "summer",
    month %in% c(10:11) ~ "fall"
  )) |>
  group_by(est_year, comname, EVENTNAME) |>
  distinct() |>
  rename("total_biomass_kg" = "SPECIESTOTALWEIGHT",
         "lat" = "LATITUDESTART",
         "lon" = "LONGITUDESTART",
         "surftemp" = "TEMPSURFACE",
         "bottemp" = "TEMPBOTTOM",
         "depthzone" = "DEPTHZONE") |>
  mutate(total_biomass_kg = parse_number(total_biomass_kg),
         lat = parse_number(lat),
         lon = parse_number(lon),
         surftemp = parse_number(surftemp),
         bottemp = parse_number(bottemp)) # slow

```

```{r}
#| label: trawl info
#| echo: false
#| message: false
#| warning: false
#| fig-align: center
#| fig-width: 9
#| fig-height: 5

# total biomass per tow? 
clean_survey |>
  group_by(est_year) |>
  summarise(biomass_per_tow = mean(total_biomass_kg, na.rm=T)) -> biomass_per_tow

ggplot(data = biomass_per_tow) +
  geom_line(aes(x = est_year, y = biomass_per_tow)) +
  xlab("Year") + ylab("Biomass in kg") +
  ggtitle("Average biomass hauled per tow") + 
  theme_gmri() 

# average temperature across all tows
clean_survey |>
  group_by(est_year) |>
  summarise(annual_sst = mean(surftemp, na.rm=T)) -> sst

ggplot(data = sst) +
  geom_line(aes(x = est_year, y = annual_sst)) +
  xlab("Year") + ylab("Sea surface temp") +
  ggtitle("Average annual sea surface temperature") + 
  theme_gmri() 

# median survey days
year_day <- clean_survey |>
  ungroup() |>
  select(est_year, season, yearday, EVENTNAME) |>
  distinct()

tows <- year_day %>% 
  group_by(est_year, season) %>% 
  summarise(
    min  = min(yearday),
    max  = max(yearday),
    mean = mean(yearday),
    median = median(yearday)
  ) %>% 
  pivot_longer(cols = min:median, names_to = "stat", values_to = "value")

tows |>
  filter(stat == "median") |>
  ggplot() +
  geom_line(aes(x = est_year, y = value, color = season)) +
  ggtitle("Median survey day") +
  xlab("Year") + ylab("Year-day") +
  scale_color_gmri() +
  theme_gmri()



```

```{r}
#| label: center bio
#| echo: false
#| message: false
#| warning: false

# Species filtering ----
# Keep only species that were observed in at least 5 tows for each season and then in both seasons for at least 80% of survey years.
tow_spp <- clean_survey |>
    group_by(scientific_name, comname, est_year, season) |>
    summarise(tows = n_distinct(EVENTNAME)) |>
    filter(tows >= 5)

# 80% cut off (49 years)
cut <- (max(tow_spp$est_year) - min(tow_spp$est_year)) - floor(0.08 * (max(tow_spp$est_year) - min(tow_spp$est_year)))

tow_seas_spp <- tow_spp |>
    # 80% of years have both spring and fall
    group_by(scientific_name, comname, est_year) |>
    summarise(seasons = n_distinct(season)) |>
    filter(seasons == 3) |>
    group_by(scientific_name, comname) |>
    summarise(years = n_distinct(est_year)) |>
    filter(years >= cut)

# Calculate center of biomass metrics ----
center_bio <- function(clean_survey, ...){
  clean_survey %>%
    group_by(comname, ...) %>%
    summarise(
      # Un-weighted averages
      total_biomass   = sum(total_biomass_kg),
      avg_biomass     = mean(total_biomass_kg),
      biomass_sd      = sd(total_biomass_kg),
      avg_lat         = weightedMean(lat, w = total_biomass_kg, na.rm = T),  
      avg_lon         = weightedMean(lon, w = total_biomass_kg, na.rm = T),
      avg_sst         = weightedMean(surftemp, w = total_biomass_kg, na.rm = T),
      avg_bt          = weightedMean(bottemp, w = total_biomass_kg, na.rm = T),
      .groups = "drop")
}

seas_cob <- center_bio(clean_survey, scientific_name, est_year, season) |>
  filter(scientific_name %in% tow_seas_spp$scientific_name)

## grabbing missing comname species
seas_cob |>
  filter(comname == "") |>
  select(scientific_name) |>
  distinct() -> drop 

seas_cob <- seas_cob |>
  filter(!scientific_name %in% drop$scientific_name) # dropping for now, will add back in later
  
## annual...?
annual_cob <- center_bio(clean_survey, scientific_name, est_year) |>
  filter(scientific_name %in% tow_seas_spp$scientific_name) |> 
  filter(!scientific_name %in% drop$scientific_name)
  

```

```{r}
#| label: cob plot
#| echo: false
#| message: false
#| warning: false
#| fig-width: 9
#| fig-height: 6
#| fig-align: center

plots <- seas_cob |>
  # filter(!season == "summer") |> # for now
  group_by(comname) |>
  nest() 

# center of latitude
plots |>
  mutate(lat_plot = map(data, function(x){
    out <- ggplot(x) +
      geom_line(aes(x = est_year, y = avg_lat,group = est_year), color = "#535353", alpha = 0.8) +
      geom_point(aes(x = est_year, y = avg_lat, color = season)) +
      scale_color_gmri() +
      # facet_wrap(~season, nrow = 1) + 
      xlab("Year") + ylab("Lat") +
      ggtitle("Center of latitude by season") +
      theme_gmri(
        strip.background = element_rect(fill = "transparent"),
        strip.text = element_text(color = "black")
      )
    return(out)
  })) -> plots


# center of longitude
plots |>
  mutate(lon_plot = map(data, function(x){
    out <- ggplot(x) +
      geom_line(aes(y = est_year, x = avg_lon,group = est_year), color = "#535353", alpha = 0.8) +
      geom_point(aes(y = est_year, x = avg_lon, color = season)) +
      scale_color_gmri() +
      # facet_wrap(~season, nrow = 1) + 
      ylab("Year") + xlab("Lon") +
      ggtitle("Center of longitude by season") +
      theme_gmri(
        strip.background = element_rect(fill = "transparent"),
        strip.text = element_text(color = "black")
      )
    return(out)
  })) -> plots
```

```{r}
#| label: temperature plots
#| echo: false
#| message: false
#| warning: false
#| fig-width: 9
#| fig-height: 6
#| fig-align: center

# surface temp
plots |> 
  mutate(sst_plot = map(data, function(x){
    out <- ggplot(x) +
      geom_line(aes(x = est_year, y = avg_sst,group = est_year), color = "#535353", alpha = 0.8) +
      geom_point(aes(x = est_year, y = avg_sst, color = season)) +
      scale_color_gmri() +
      # facet_wrap(~season, nrow = 1) + 
      xlab("Year") + ylab("SST") +
      ggtitle("Sea surface temperature") +
      theme_gmri(
        strip.background = element_rect(fill = "transparent"),
        strip.text = element_text(color = "black")
      )
    return(out)
  })) -> plots

# bottom temp
plots |> 
  mutate(bt_plot = map(data, function(x){
    out <- ggplot(x) +
      geom_line(aes(x = est_year, y = avg_bt,group = est_year), color = "#535353", alpha = 0.8) +
      geom_point(aes(x = est_year, y = avg_bt, color = season)) +
      scale_color_gmri() +
      # facet_wrap(~season, nrow = 1) + 
      xlab("Year") + ylab("BT") +
      ggtitle("Bottom temperature") +
      theme_gmri(
        strip.background = element_rect(fill = "transparent"),
        strip.text = element_text(color = "black")
      )
    return(out)
  })) -> plots

```

```{r}
#| label: maps
#| echo: false
#| message: false
#| warning: false
#| fig-height: 13
#| fig-width: 9
#| fig-align: center

plots |>
    mutate(map = map2(data, comname, function(x,y){
        us <- rnaturalearth::ne_states(country = "united states of america")
        x  <- x |>
          mutate(decade = 10*est_year %/% 10) 
        plot <- ggplot() +
          geom_sf(data = us) +
          coord_sf(ylim = c(28,35), xlim = c(-82,-75)) +
          ggtitle("Season center of biomass by decade") +
          ylab("Latitude") + xlab("Longitude") + 
          scale_x_continuous(breaks = c(-82, -79, -76)) +
          scale_y_continuous(breaks = c(29, 32, 35)) +
          geom_point(data = x, aes(x = avg_lon, y = avg_lat, color = season)) +
          scale_color_gmri() + 
          guides(color = guide_legend(title = "Season")) +
          facet_wrap(~decade, nrow = 1) +
          theme_gmri(strip.background = element_rect(fill = "transparent", linetype = 1, linewidth = 1, color = "#e9e9e9"),
                     strip.text = element_text(color = "black"),
                     axis.line = element_line(color = "#e9e9e9"),
                     axis.ticks = element_line(color = "#e9e9e9"),
                     plot.title = element_text(size = 12),
                     panel.border = element_rect(color = "#e9e9e9", linetype = 1, linewidth = 1),
                     panel.grid.major = element_line(color = "#e9e9e9"))  
        
        return(plot)
      })) -> plots

```

#### Species profiles

The species included have been filtered to those observed in at least 5 tows for each season and in all seasons for at least 80% of survey years.

```{r}
#| label: species profiles
#| echo: false
#| message: false
#| warning: false
#| #| fig-align: center
#| fig-height: 13
#| fig-width: 13


library(patchwork)
library(grid)
library(gridExtra)

plots |>
  select(!data) |>
  group_by(comname) |>
  nest() |>
  mutate(species_profile = map2(data, comname, function(x,y){
    map <- x$map[[1]]
    lat <- x$lat_plot[[1]]
    lon <- x$lon_plot[[1]]
    sst <- x$sst_plot[[1]]
    bt  <- x$bt_plot[[1]]

    out <- grid.arrange(map, lat, lon, sst, bt, nrow = 3, layout_matrix=rbind(c(1,1), c(2,3), c(4,5)), top = textGrob(paste(str_to_sentence(comname)), gp = gpar(col = "black", fontsize = 15, fontface = "bold")))
  })) -> species_profiles

```
